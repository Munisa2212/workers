// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int          @id @default(autoincrement())
  name     String
  password String
  phone    String       @unique
  email    String       @unique
  INN      String?
  MFO      String?
  RS       String?
  Bank     String?
  OKED     String?
  address  String
  role     UserRole
  status   ActiveStatus @default(PASSIVE)

  Region    Region @relation(fields: [region_id], references: [id])
  region_id Int

  sessions Session[]

  orders Order[]
}

model Region {
  id      Int     @id @default(autoincrement())
  name_uz String
  name_ru String?
  name_en String?

  users User[]
}

model Brand {
  id      Int     @id @default(autoincrement())
  name_uz String
  name_ru String?
  name_en String?
}

model Level {
  id      Int     @id @default(autoincrement())
  name_uz String
  name_ru String?
  name_en String?

  products    Product[]
  master_jobs Master_Job[]
}

model Capacity {
  id      Int     @id @default(autoincrement())
  name_uz String
  name_ru String?
  name_en String?
}

model Size {
  id      Int     @id @default(autoincrement())
  name_uz String
  name_ru String?
  name_en String?
}

model Product {
  id               Int          @id @default(autoincrement())
  status           ActiveStatus @default(PASSIVE)
  name_uz          String
  name_ru          String?
  name_en          String?
  image            String
  min_working_hour Int
  price_hourly     Int
  price_daily      Int

  Level    Level @relation(fields: [level_id], references: [id])
  level_id Int
}

model Session {
  id     Int    @id @default(autoincrement())
  device String
  date   String

  User    User @relation(fields: [user_id], references: [id])
  user_id Int
}

model Order {
  id            Int          @id @default(autoincrement())
  total         Int          @default(0)
  location      String
  address       String
  date          String
  payment_type  PaymentType
  with_delivery Boolean
  status        ActiveStatus

  User    User @relation(fields: [user_id], references: [id])
  user_id Int

  order_items OrderItems[]
}

model OrderItems {
  id         Int          @id @default(autoincrement())
  product_id Int
  level      String
  count      Int
  quantity   Int
  duration   DurationType

  Order    Order @relation(fields: [order_id], references: [id])
  order_id Int
  Tool     Tool? @relation(fields: [toolId], references: [id])
  toolId   Int?
}

model Master {
  id             Int          @id @default(autoincrement())
  name           String
  phone          String
  status         ActiveStatus @default(PASSIVE)
  year           Int
  image          String
  passport_image String
  about          String

  master_jobs Master_Job[]

  stars Star[]
}

model Master_Job {
  id                Int @id @default(autoincrement())
  product_id        Int
  min_working_hours Int

  Level        Level @relation(fields: [level_id], references: [id])
  level_id     Int
  price_hourly Int
  price_daily  Int
  experience   Int

  Master    Master @relation(fields: [master_id], references: [id])
  master_id Int
}

model Star {
  id      Int @id @default(autoincrement())
  count   Int
  user_id Int

  Master    Master @relation(fields: [master_id], references: [id])
  master_id Int
}

model Tool {
  id             Int          @id @default(autoincrement())
  name_uz        String
  name_ru        String
  name_en        String
  description_uz String
  description_ru String
  description_en String
  price          Int
  quantity       Int
  code           Int
  image          String
  status         ActiveStatus
  Basket         Basket[]
  orderItems     OrderItems[]

}

model Basket {
  id Int @id @default(autoincrement())

  Tool    Tool @relation(fields: [tool_id], references: [id])
  tool_id Int
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
  VIEWER_ADMIN
  USER_FIZ
  USER_YUR
}

enum ActiveStatus {
  ACTIVE
  PASSIVE
}

enum PaymentType {
  ONLINE
  CASH
}

enum DurationType {
  DAY
  HOUR
}
